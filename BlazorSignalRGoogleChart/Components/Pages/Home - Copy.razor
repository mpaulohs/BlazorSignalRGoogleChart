@page "/test"
@using BlazorSignalRGoogleChart.Application.PizzaToppings.Queries
@using BlazorSignalRGoogleChart.Domain.Entities
@inject IJSRuntime JSRuntime
@rendermode InteractiveServer
@using Mediator
@inject IMediator _mediator

<PageTitle>Home</PageTitle>

<div class="row">
    <div class="col-2">
        <label class="form-label">Toppings</label>
        <select class="form-select" aria-label="Default select example">
            <option selected>Open</option>
            <option value="1">One</option>
            <option value="2">Two</option>
            <option value="3">Three</option>
        </select>        
    </div>
    <div class="col-2">
        <label class="form-label">Qtd. Slices</label>
        <select class="form-select" aria-label="Default select example">
            <option selected>Open</option>
            <option value="1">One</option>
            <option value="2">Two</option>
            <option value="3">Three</option>
        </select>
    </div>
    <div class="col-3" style="padding-top: 31px; padding-bottom: 0px;margin-top: 0px;">
        <button type="submit" class="btn btn-success mb-3">Add Slices</button>
    </div>
</div>
<h2>Random</h2>
<div class="btn-group">    
    <button @onclick="ResetRamdon" class="btn btn-danger">Reset</button>
    <button type="button" class="btn btn-warning">Stop</button>
    <button type="button" class="btn btn-success">Start</button>
</div>
<div id="passwordHelpBlock" class="form-text">
    Create text here
</div>

@* <div class="row">

    @foreach (var item in toppings)
    {
        <div class="col-2">
            <button @onclick="@(e => AddSlice(item.Id))" type="button" class="btn btn-primary position-relative">
                @item.Topping
                <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
                    @item.Slices+
                    <span class="visually-hidden">unread messages</span>
                </span>
            </button>
        </div>
    }

</div> *@


<hr />

<div id="chart_div"></div>


@code {
   
    private bool _IsLoading = false;
    List<PizzaTopping> toppings = [];

    protected override async Task OnInitializedAsync()
    {
        toppings = await _mediator.Send(new GetToppingsListsQuery());
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("drawChart");
            await JSRuntime.InvokeVoidAsync("initializeAccordion");
        }
    }


    private async void AddSlice(int id)
    {
        int dd = await _mediator.Send(new AddSliceCommand() { PizzaToppingId = id });
        toppings = await _mediator.Send(new GetToppingsListsQuery());
        StateHasChanged();
    }
    private void ResetRamdon()
    {
       
    }
    private void StopRamdon()
    {

    }
    private void StartRamdon()
    {

    }
   
}
